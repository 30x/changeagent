// Code generated by protoc-gen-go.
// source: communication.proto
// DO NOT EDIT!

package protobufs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VoteRequestPb struct {
	Term             *uint64 `protobuf:"varint,1,req,name=term" json:"term,omitempty"`
	CandidateId      *uint64 `protobuf:"fixed64,2,req,name=candidateId" json:"candidateId,omitempty"`
	LastLogIndex     *uint64 `protobuf:"varint,3,req,name=lastLogIndex" json:"lastLogIndex,omitempty"`
	LastLogTerm      *uint64 `protobuf:"varint,4,req,name=lastLogTerm" json:"lastLogTerm,omitempty"`
	ClusterId        *uint64 `protobuf:"fixed64,5,req,name=clusterId" json:"clusterId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VoteRequestPb) Reset()                    { *m = VoteRequestPb{} }
func (m *VoteRequestPb) String() string            { return proto.CompactTextString(m) }
func (*VoteRequestPb) ProtoMessage()               {}
func (*VoteRequestPb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *VoteRequestPb) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *VoteRequestPb) GetCandidateId() uint64 {
	if m != nil && m.CandidateId != nil {
		return *m.CandidateId
	}
	return 0
}

func (m *VoteRequestPb) GetLastLogIndex() uint64 {
	if m != nil && m.LastLogIndex != nil {
		return *m.LastLogIndex
	}
	return 0
}

func (m *VoteRequestPb) GetLastLogTerm() uint64 {
	if m != nil && m.LastLogTerm != nil {
		return *m.LastLogTerm
	}
	return 0
}

func (m *VoteRequestPb) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

type VoteResponsePb struct {
	NodeId           *uint64 `protobuf:"fixed64,1,req,name=nodeId" json:"nodeId,omitempty"`
	Term             *uint64 `protobuf:"varint,2,req,name=term" json:"term,omitempty"`
	VoteGranted      *bool   `protobuf:"varint,3,req,name=voteGranted" json:"voteGranted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VoteResponsePb) Reset()                    { *m = VoteResponsePb{} }
func (m *VoteResponsePb) String() string            { return proto.CompactTextString(m) }
func (*VoteResponsePb) ProtoMessage()               {}
func (*VoteResponsePb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *VoteResponsePb) GetNodeId() uint64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *VoteResponsePb) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *VoteResponsePb) GetVoteGranted() bool {
	if m != nil && m.VoteGranted != nil {
		return *m.VoteGranted
	}
	return false
}

type AppendRequestPb struct {
	Term             *uint64    `protobuf:"varint,1,req,name=term" json:"term,omitempty"`
	LeaderId         *uint64    `protobuf:"fixed64,2,req,name=leaderId" json:"leaderId,omitempty"`
	PrevLogIndex     *uint64    `protobuf:"varint,3,req,name=prevLogIndex" json:"prevLogIndex,omitempty"`
	PrevLogTerm      *uint64    `protobuf:"varint,4,req,name=prevLogTerm" json:"prevLogTerm,omitempty"`
	LeaderCommit     *uint64    `protobuf:"varint,5,req,name=leaderCommit" json:"leaderCommit,omitempty"`
	Entries          []*EntryPb `protobuf:"bytes,6,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *AppendRequestPb) Reset()                    { *m = AppendRequestPb{} }
func (m *AppendRequestPb) String() string            { return proto.CompactTextString(m) }
func (*AppendRequestPb) ProtoMessage()               {}
func (*AppendRequestPb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *AppendRequestPb) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendRequestPb) GetLeaderId() uint64 {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return 0
}

func (m *AppendRequestPb) GetPrevLogIndex() uint64 {
	if m != nil && m.PrevLogIndex != nil {
		return *m.PrevLogIndex
	}
	return 0
}

func (m *AppendRequestPb) GetPrevLogTerm() uint64 {
	if m != nil && m.PrevLogTerm != nil {
		return *m.PrevLogTerm
	}
	return 0
}

func (m *AppendRequestPb) GetLeaderCommit() uint64 {
	if m != nil && m.LeaderCommit != nil {
		return *m.LeaderCommit
	}
	return 0
}

func (m *AppendRequestPb) GetEntries() []*EntryPb {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendResponsePb struct {
	Term             *uint64 `protobuf:"varint,1,req,name=term" json:"term,omitempty"`
	Success          *bool   `protobuf:"varint,2,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppendResponsePb) Reset()                    { *m = AppendResponsePb{} }
func (m *AppendResponsePb) String() string            { return proto.CompactTextString(m) }
func (*AppendResponsePb) ProtoMessage()               {}
func (*AppendResponsePb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *AppendResponsePb) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendResponsePb) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type ProposalResponsePb struct {
	NewIndex         *uint64 `protobuf:"varint,1,req,name=newIndex" json:"newIndex,omitempty"`
	Error            *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProposalResponsePb) Reset()                    { *m = ProposalResponsePb{} }
func (m *ProposalResponsePb) String() string            { return proto.CompactTextString(m) }
func (*ProposalResponsePb) ProtoMessage()               {}
func (*ProposalResponsePb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ProposalResponsePb) GetNewIndex() uint64 {
	if m != nil && m.NewIndex != nil {
		return *m.NewIndex
	}
	return 0
}

func (m *ProposalResponsePb) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type DiscoveryResponsePb struct {
	NodeId           *uint64 `protobuf:"fixed64,1,req,name=nodeId" json:"nodeId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DiscoveryResponsePb) Reset()                    { *m = DiscoveryResponsePb{} }
func (m *DiscoveryResponsePb) String() string            { return proto.CompactTextString(m) }
func (*DiscoveryResponsePb) ProtoMessage()               {}
func (*DiscoveryResponsePb) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DiscoveryResponsePb) GetNodeId() uint64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func init() {
	proto.RegisterType((*VoteRequestPb)(nil), "protobufs.VoteRequestPb")
	proto.RegisterType((*VoteResponsePb)(nil), "protobufs.VoteResponsePb")
	proto.RegisterType((*AppendRequestPb)(nil), "protobufs.AppendRequestPb")
	proto.RegisterType((*AppendResponsePb)(nil), "protobufs.AppendResponsePb")
	proto.RegisterType((*ProposalResponsePb)(nil), "protobufs.ProposalResponsePb")
	proto.RegisterType((*DiscoveryResponsePb)(nil), "protobufs.DiscoveryResponsePb")
}

func init() { proto.RegisterFile("communication.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0x3b, 0x31,
	0x14, 0xc5, 0x99, 0x76, 0xfa, 0x75, 0xfb, 0xf9, 0x4f, 0xff, 0x8b, 0xc1, 0x55, 0x19, 0x11, 0xba,
	0x2a, 0x28, 0xf8, 0x00, 0x52, 0x45, 0x0a, 0x2e, 0x8a, 0x88, 0xfb, 0x34, 0xb9, 0xca, 0xc0, 0x34,
	0x89, 0xb9, 0x99, 0x6a, 0x9f, 0xc4, 0xd7, 0x35, 0x93, 0x76, 0x86, 0x8a, 0x74, 0x15, 0x38, 0x37,
	0xe7, 0x9c, 0xdf, 0xbd, 0x30, 0x15, 0x7a, 0xbb, 0x2d, 0x54, 0x26, 0xb8, 0xcb, 0xb4, 0x5a, 0x18,
	0xab, 0x9d, 0x66, 0xbd, 0xf0, 0x6c, 0x8a, 0x37, 0xba, 0x18, 0x94, 0xf3, 0x6a, 0x90, 0x1a, 0x18,
	0xbe, 0x6a, 0x87, 0xcf, 0xf8, 0x51, 0x20, 0xb9, 0xf5, 0x86, 0x0d, 0x20, 0x76, 0x68, 0xb7, 0x49,
	0x34, 0x6b, 0xcc, 0x63, 0x36, 0x85, 0xbe, 0xe0, 0x4a, 0x66, 0x92, 0x3b, 0x5c, 0xc9, 0xa4, 0xe1,
	0xc5, 0x36, 0xfb, 0x0f, 0x83, 0x9c, 0x93, 0x7b, 0xd2, 0xef, 0x2b, 0x25, 0xf1, 0x2b, 0x69, 0x56,
	0x5f, 0x8f, 0xea, 0x4b, 0xe9, 0x8f, 0x83, 0xf8, 0x0f, 0x7a, 0x22, 0x2f, 0xc8, 0x27, 0x7a, 0x77,
	0xab, 0x74, 0xa7, 0x4b, 0x18, 0x1d, 0x1a, 0xc9, 0x68, 0x45, 0xe8, 0x2b, 0x47, 0xd0, 0x56, 0x5a,
	0x96, 0xf9, 0x51, 0xc8, 0xaf, 0x10, 0x1a, 0x55, 0xee, 0xce, 0xff, 0x7f, 0xb4, 0x5c, 0x39, 0x94,
	0xa1, 0xac, 0x9b, 0x7e, 0x47, 0x30, 0xbe, 0x33, 0x06, 0x95, 0x3c, 0x47, 0x3e, 0x81, 0x6e, 0x8e,
	0x5c, 0x86, 0xe2, 0x1a, 0xdb, 0x58, 0xdc, 0xfd, 0xc5, 0x3e, 0xaa, 0x27, 0xd8, 0xe5, 0x86, 0xc1,
	0xbc, 0xf4, 0xb7, 0xca, 0x5c, 0x20, 0x8f, 0xd9, 0x25, 0x74, 0x50, 0x39, 0x9b, 0x21, 0x25, 0xed,
	0x59, 0x73, 0xde, 0xbf, 0x61, 0x8b, 0xfa, 0xac, 0x8b, 0x07, 0x3f, 0xd9, 0xaf, 0x37, 0xe9, 0x35,
	0x4c, 0x2a, 0xb0, 0x7a, 0xc1, 0xdf, 0x64, 0x63, 0xe8, 0x50, 0x21, 0x04, 0x12, 0x05, 0xb0, 0x6e,
	0x7a, 0x0b, 0x6c, 0x6d, 0xb5, 0xd1, 0xc4, 0xf3, 0x13, 0x93, 0x5f, 0x40, 0xe1, 0xe7, 0x01, 0xf5,
	0x60, 0x1c, 0x42, 0x0b, 0xad, 0xd5, 0xd6, 0xdb, 0xa2, 0x79, 0x2f, 0xbd, 0x82, 0xe9, 0x7d, 0x46,
	0x42, 0xef, 0xd0, 0xee, 0xcf, 0x5f, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xd5, 0x7c, 0xaa,
	0x10, 0x02, 0x00, 0x00,
}
