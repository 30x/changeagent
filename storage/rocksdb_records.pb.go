// Code generated by protoc-gen-go.
// source: rocksdb_records.proto
// DO NOT EDIT!

/*
Package storage is a generated protocol buffer package.

It is generated from these files:
	rocksdb_records.proto

It has these top-level messages:
	EntryPb
*/
package storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EntryPb struct {
	Index            *uint64 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Type             *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Term             *uint64 `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	Timestamp        *int64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Tenant           []byte  `protobuf:"bytes,5,opt,name=tenant" json:"tenant,omitempty"`
	Collection       []byte  `protobuf:"bytes,6,opt,name=collection" json:"collection,omitempty"`
	Key              *string `protobuf:"bytes,7,opt,name=key" json:"key,omitempty"`
	Data             []byte  `protobuf:"bytes,8,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntryPb) Reset()         { *m = EntryPb{} }
func (m *EntryPb) String() string { return proto.CompactTextString(m) }
func (*EntryPb) ProtoMessage()    {}

func (m *EntryPb) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *EntryPb) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *EntryPb) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *EntryPb) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *EntryPb) GetTenant() []byte {
	if m != nil {
		return m.Tenant
	}
	return nil
}

func (m *EntryPb) GetCollection() []byte {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *EntryPb) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *EntryPb) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}
